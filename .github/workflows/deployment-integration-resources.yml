name: "Deploy Integration Resources"

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  deploy_integration_resources:
    environment: "azure"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to azure
        shell: pwsh
        run: |
          az login --service-principal `
            -u ${{ secrets.SPN_CLIENT_ID }} `
            -p ${{ secrets.SPN_CLIENT_SECRET }} `
            --tenant ${{ secrets.SPN_TENANT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Integration Resources Terraform Init
        run: terraform -chdir="./.github/terraform/integration_resources" init
        env:
          ARM_ACCESS_KEY: ${{ secrets.BACKEND_STORAGE_ACCESS_KEY }}
          ARM_CLIENT_ID: ${{ secrets.SPN_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.SPN_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.SPN_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SPN_SUBSCRIPTION_ID }}
          TF_VAR_db_account_id: ${{ secrets.DATABRICKS_ACCOUNT_ID }}

      - name: Integration Resources Terraform Apply
        run: terraform -chdir="./.github/terraform/integration_resources" apply -auto-approve
        env:
          ARM_ACCESS_KEY: ${{ secrets.BACKEND_STORAGE_ACCESS_KEY }}
          ARM_CLIENT_ID: ${{ secrets.SPN_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.SPN_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.SPN_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SPN_SUBSCRIPTION_ID }}
          TF_VAR_db_account_id: ${{ secrets.DATABRICKS_ACCOUNT_ID }}

      - name: Databricks Integration Terraform Init
        run: terraform -chdir="./.github/terraform/integration_databricks" init
        env:
          ARM_ACCESS_KEY: ${{ secrets.BACKEND_STORAGE_ACCESS_KEY }}
          ARM_CLIENT_ID: ${{ secrets.SPN_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.SPN_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.SPN_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SPN_SUBSCRIPTION_ID }}
          TF_VAR_db_account_id: ${{ secrets.DATABRICKS_ACCOUNT_ID }}

      - name: Databricks Integration Terraform Apply
        run: terraform -chdir="./.github/terraform/integration_databricks" apply -auto-approve
        env:
          ARM_ACCESS_KEY: ${{ secrets.BACKEND_STORAGE_ACCESS_KEY }}
          ARM_CLIENT_ID: ${{ secrets.SPN_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.SPN_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.SPN_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SPN_SUBSCRIPTION_ID }}
          TF_VAR_db_account_id: ${{ secrets.DATABRICKS_ACCOUNT_ID }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Build Spetlr Library
        shell: pwsh
        run: .github/submit/build.ps1

      - name: Setup Databricks CLI
        shell: bash
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          databricks -v
      
      - name: Connect to Databricks
        shell: pwsh
        run: |
          .github/submit/connect_DB_api.ps1 


      - name: Launch integration tests with DBR 14.3
        shell: pwsh
        run: |
          .github/submit/submit_test_job.ps1  `
            -cluster_env cluster_env_14_3.json `
            -sparkLibs sparklibs14_3.json

      - name: Azure logout
        shell: pwsh
        run: az logout
