name: Pre-Integration

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  unit_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
          - "3.8"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v2
        # this workflow needs java so that it can run a local instance of spark
        with:
          java-version: "8"
          distribution: "temurin"
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install test requirements
        run: pip install -r requirements_dev.txt
      - name: Check code formatting
        run: |
          black --check .
          isort --check .
      - name: Check code linting
        run: flake8 .
      - name: Install the package
        run: pip install .
      - name: Run Tests
        run: python -m pytest tests/local

  integration_test:
    #    needs: unit_test # integration can be run in parallel with unit-tests
    runs-on: ubuntu-latest
    environment: azure
    concurrency: azure-integration
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install setuptools wheel twine packaging
      - name: Build Spetlr Library
        shell: pwsh
        run: .github/submit/build.ps1
      - name: Log in to azure
        shell: pwsh
        run: |
          az login --service-principal `
            -u ${{ secrets.SPN_CLIENT_ID }} `
            -p ${{ secrets.SPN_CLIENT_SECRET }} `
            --tenant ${{ secrets.SPN_TENANT_ID }} `
            --output none

      - name: Setup Databricks CLI
        shell: bash
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          databricks -v

      - name: Create Deployment
        shell: pwsh
        run: |
          .github/deploy/deploy.ps1 `
            -pipelineClientId ${{ secrets.SPN_CLIENT_ID }} `
            -uniqueRunId "${{ github.run_id }}${{ github.run_attempt }}"

      # - name: Wait 30 secs for things to settle
      #   shell: pwsh
      #   run: Start-Sleep -s 30

      # - name: Launch integration tests 10.4
      #   shell: pwsh
      #   run: |
      #     .github/submit/submit_test_job.ps1  `
      #       -sparkVersion "10.4.x-scala2.12" `
      #       -testJobDetails job104.json `
      #       -sparkLibs sparklibs104.json

      # - name: Launch integration tests 11.3
      #   shell: pwsh
      #   run: |
      #     .github/submit/submit_test_job.ps1  `
      #       -sparkVersion "11.3.x-scala2.12" `
      #       -testJobDetails job113.json `
      #       -sparkLibs sparklibs113.json

      # - name: Launch integration tests 10.4
      #   shell: pwsh
      #   run: |
      #     .github/submit/submit_test_job.ps1  `
      #       -cluster_env cluster_env_104.json `
      #       -sparkLibs sparklibs104.json

      # - name: Launch integration tests 11.3
      #   shell: pwsh
      #   run: |
      #     .github/submit/submit_test_job.ps1  `
      #       -cluster_env cluster_env_113.json `
      #       -sparkLibs sparklibs113.json

      - name: Launch integration tests 13.3
        shell: pwsh
        run: |
          .github/submit/submit_test_job.ps1  `
            -cluster_env cluster_env_133.json `
            -sparkLibs sparklibs133.json

      - name: Wait 2 min for things to settle
        shell: pwsh
        run: Start-Sleep -s 120

      # - name: Fetch integration tests 10.4
      #   shell: pwsh
      #   run: .github/submit/fetch_test_job.ps1 -testJobDetails job104.json

      # - name: Fetch integration tests 11.3
      #   shell: pwsh
      #   run: .github/submit/fetch_test_job.ps1 -testJobDetails job113.json

      # - name: Delete Deployment
      #   if: always() # this step runs even if the pipeline is manually cancelled
      #   shell: pwsh
      #   run: |
      #     az login --service-principal `
      #       -u ${{ secrets.SPN_CLIENT_ID }} `
      #       -p ${{ secrets.SPN_CLIENT_SECRET }} `
      #       --tenant ${{ secrets.SPN_TENANT_ID }} `
      #       --output none

      #     .github/deploy/destroy.ps1 `
      #       -uniqueRunId "${{ github.run_id }}${{ github.run_attempt }}"
