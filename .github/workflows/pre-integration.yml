# name: Pre-Integration

# on:
#   pull_request:
#     types:
#       - opened
#       - synchronize
#       - reopened

# jobs:
#   unit_test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python_version:
#           - "3.10"
#     steps:
#       - uses: actions/checkout@v4
#       - name: Setup Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python_version }}
#       - uses: actions/setup-java@v4
#       # this workflow needs java so that it can run a local instance of spark
#         with:
#           java-version: "11"
#           distribution: "temurin"
#       - name: Install the package
#         run: pip install .
#       - name: Install test requirements
#         run: pip install -r requirements_dev.txt
#       - name: Check code formatting
#         run: |
#           black --check .
#           isort --check .
#       - name: Check code linting
#         run: flake8 . --exclude tests
#       - name: Run Tests
#         run: python -m pytest tests/local

#   integration_test:
#     #    needs: unit_test # integration can be run in parallel with unit-tests
#     runs-on: ubuntu-latest
#     environment: azure
#     concurrency: azure-integration
#     steps:
#       - uses: actions/checkout@v4

#       - name: Setup Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.10"

#       - name: Build Spetlr Library
#         shell: pwsh
#         run: .github/submit/build.ps1

#       - name: Log in to azure
#         shell: pwsh
#         run: |
#           az login --service-principal `
#             -u ${{ secrets.SPN_CLIENT_ID }} `
#             -p ${{ secrets.SPN_CLIENT_SECRET }} `
#             --tenant ${{ secrets.SPN_TENANT_ID }} `
#             --output none

#       - name: Setup Databricks CLI
#         shell: bash
#         run: |
#           curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
#           databricks -v

#       - name: Create deployment
#         shell: pwsh
#         run: |
#           .github/deploy/deploy.ps1 `
#             -pipelineClientId ${{ secrets.SPN_CLIENT_ID }} `
#             -uniqueRunId "${{ github.run_id }}${{ github.run_attempt }}"

#       - name: Launch integration tests with DBR 14.3
#         shell: pwsh
#         run: |
#           .github/submit/submit_test_job.ps1  `
#             -cluster_env cluster_env_14_3.json `
#             -sparkLibs sparklibs14_3.json

#       - name: Wait 2 minutes for reviewing test results
#         shell: pwsh
#         run: Start-Sleep -s 120

#       - name: Delete Deployment
#         if: always() # this step runs even if the pipeline is manually cancelled
#         shell: pwsh
#         run: |
#           az login --service-principal `
#             -u ${{ secrets.SPN_CLIENT_ID }} `
#             -p ${{ secrets.SPN_CLIENT_SECRET }} `
#             --tenant ${{ secrets.SPN_TENANT_ID }} `
#             --output none

#           .github/deploy/destroy.ps1 `
#             -uniqueRunId "${{ github.run_id }}${{ github.run_attempt }}"
