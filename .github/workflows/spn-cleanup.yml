
# This pipeline can be run if the SPNs needs to be destroyed
# In this way, it is easier to clean up the SPNs, instead of manually removing them in the portal
name: Spn-Cleanup

on:
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    environment: azure
    concurrency: azure-integration

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Install Databricks CLI
        shell: bash
        run: curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh

      - name: Log in to azure
        shell: pwsh
        run: |
          az login --service-principal `
            -u ${{ secrets.SPN_CLIENT_ID }} `
            -p ${{ secrets.SPN_CLIENT_SECRET }} `
            --tenant ${{ secrets.SPN_TENANT_ID }}

      - uses: actions/checkout@v4

      - name: Databricks Metastore Terraform
        env:
          ARM_ACCESS_KEY: ${{ secrets.BACKEND_STORAGE_ACCESS_KEY }}
          ARM_CLIENT_ID: ${{ secrets.SPN_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.SPN_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.SPN_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SPN_SUBSCRIPTION_ID }}
          TF_VAR_db_account_id: ${{ secrets.DATABRICKS_ACCOUNT_ID }}
        run: |
          cd .github/terraform/cleanup
          terraform init
          terraform apply -auto-approve
#          terraform output -raw catalogs

#
#      - name: Work in databricks
#        shell: pwsh
#        run: |
#          $account = "${{ secrets.DATABRICKS_ACCOUNT_ID }}"
#          databricks auth login --host "https://accounts.azuredatabricks.net" --account-id $account
#          databricks account service-principals list

      - name: Destroy
        if: always()
        shell: pwsh
        env:
          ARM_ACCESS_KEY: ${{ secrets.BACKEND_STORAGE_ACCESS_KEY }}
          ARM_CLIENT_ID: ${{ secrets.SPN_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.SPN_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.SPN_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SPN_SUBSCRIPTION_ID }}
          TF_VAR_db_account_id: ${{ secrets.DATABRICKS_ACCOUNT_ID }}
        run: |
          cd .github/terraform/cleanup
          terraform init
          terraform apply -destroy -auto-approve
#          terraform output -raw catalogs

      - name: Azure logout
        if: always()
        shell: pwsh
        run: az logout
